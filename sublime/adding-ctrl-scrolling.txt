adding ctrl page scrolling:

Add these four lines to Sublime Text 2 > Preferences > Key Bindings - User, inside any square brackets that are already in the file:

[
    { "keys": ["ctrl+up"], "command": "scroll_lines_fixed", "args": {"amount": 1.0 } },
    { "keys": ["ctrl+down"], "command": "scroll_lines_fixed", "args": {"amount": -1.0 } },
    { "keys": ["pageup"], "command": "scroll_lines_fixed", "args" : {"by": "pages", "amount": 1.0 } },
    { "keys": ["pagedown"], "command": "scroll_lines_fixed", "args" : {"by": "pages", "amount": -1.0 } }
]
Within Sublime Text, choose the Tools > New Pluginâ€¦ option from the menu bar.
Replace the contents of the new file with this:

import sublime, sublime_plugin

class ScrollLinesFixedCommand(sublime_plugin.TextCommand):
   """Must work exactly as builtin scroll_lines command, but without moving the cursor when it goes out of the visible area."""
   def run(self, edit, amount, by="lines"):
      # only needed if one empty selection
      if by != "lines" or (len(self.view.sel()) == 1 and self.view.sel()[0].empty()):
         maxy = self.view.layout_extent()[1] - self.view.line_height()
         curx, cury = self.view.viewport_position()
         if by == "pages":
            delta = self.view.viewport_extent()[1]
         else:
            delta = self.view.line_height()
         nexty = min(max(cury - delta * amount, 0), maxy)
         self.view.set_viewport_position((curx, nexty))
      else:
         self.view.run_command("scroll_lines", {"amount": amount})
Save the file to ~/Library/Application Support/Sublime Text 2/Packages/ScrollLinesFixed/. You will need to create the ScrollLinesFixed folder. Save it as a .py file