/* ==========================================================================
general
========================================================================== */

.container  {
//enable flex
display: flex;
//contents break to next line on wrap
flex-wrap: wrap;
//horizontal or vertical stacking
flex-direction: row | column;
//shorthand for flex direction/flex wrap
flex-flow: row wrap;
//the alignment of child items (if there is free space to deal with)
justify-content: flex-start | flex-end | center | space-between | space-around | stretch (default value);
align-items: (same as above)

/* 0 0 auto */
flex: none;

/* One value, unitless number: flex-grow
(flex-basis changes to 0) */
flex: 2;

/* One value, width/height: flex-basis */
flex: 10em;
flex: 30px;
flex: auto;
flex: content;

/* Two values: flex-grow | flex-basis */
flex: 1 30px;

/* Two values: flex-grow | flex-shrink
(flex-basis changes to 0) */
flex: 2 2;

/* Three values:
flex-grow | flex-shrink | flex-basis */
flex: 2 2 10%;

/* Global values */
flex: inherit;
flex: initial;
flex: unset;

}

/* ==========================================================================
// needed to work on IOS8
========================================================================== */

flex-shrink: 0
//turns to:
-webkit-flex-shrink: 0;

//for flex elements that have a parent of flex with direction of row
//use width instead of flex-basis
flex-basis: 50%;
// turns to:
width: 50%



/* ==========================================================================
sticky footer
========================================================================== */

/**
 * 1. Avoid the IE 10-11 `min-height` bug.
 * 2. Set `flex-shrink` to `0` to prevent Chrome, Opera, and Safari from
 *    letting these items shrink to smaller than their content's default
 *    minimum size.
 */
.Site {
  display: flex;
  flex-direction: column;
  height: 100vh; /* 1 */
}
.Site-header,
.Site-footer {
  flex-shrink: 0; /* 2 */
}
.Site-content {
  flex: 1 0 auto; /* 2 */
}


//implementation:

// <body class="Site">
//   <header class="Site-header">…</header>
//   <main class="Site-content">…</main>
//   <footer class="Site-footer">…</footer>
// </body>



//version with subfooter
//=======================================//
.site-wrapper {
	display: flex;
	height: 100vh;
	flex-direction: column;
}

.page-content {
	flex: 1 0 auto;
}

#header, #footer, #sub-footer {
	//force them to maintain their vertical height
	flex-shrink: 0;
}

//implementation:

// <header id="header">…</header>
// <div class="site-wrapper">
// 	 <div class="page-content">
// 	    inner page content...
// 	 </div><!-- page content -->
//  <footer id="footer">
// </div><!-- end site wrapper -->